<%- include('adminHeader') %>
<div class="flex flex-col md:flex-row min-h-screen bg-gray-900">
  <%- include('sidebar') %>
  <main class="flex-1 p-4 md:p-8">
    <section class="mb-6">
      <h1 class="text-2xl font-bold text-white mb-2">Customers</h1>
      <p class="text-gray-300 mb-4">Manage your customers efficiently. Search, view, and update their status easily.</p>
      <form class="flex flex-col sm:flex-row items-center gap-2 bg-gray-800 rounded-lg shadow p-4" method="GET" action="/admin/customers">
        <input id="searchInput" type="text" name="search" class="flex-1 border border-gray-700 bg-gray-900 text-white rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-400 placeholder-gray-400" placeholder="Search by user name or email..." value="<%= searchQuery %>">
        <div class="flex gap-2 w-full sm:w-auto">
          <button type="submit" class="bg-blue-900 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-bold shadow transition">Search</button>
          <button id="clearSearchBtn" type="button" class="bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg text-sm font-bold shadow transition">Clear</button>
        </div>
      </form>
    </section>
    <section class="overflow-x-auto bg-gray-800 rounded-lg shadow">
      <table class="min-w-full divide-y divide-gray-700">
        <thead class="bg-gray-900">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-bold text-white uppercase tracking-wider">Name</th>
            <th class="px-6 py-3 text-left text-xs font-bold text-white uppercase tracking-wider">Email</th>
            <th class="px-6 py-3 text-left text-xs font-bold text-white uppercase tracking-wider">Mobile</th>
            <th class="px-6 py-3 text-left text-xs font-bold text-white uppercase tracking-wider">Status</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-700">
          <% users.forEach(user=>{ %>
          <tr class="hover:bg-gray-700 transition">
            <td class="px-6 py-4 whitespace-nowrap text-sm text-white font-semibold"><%= user.username %></td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-white font-semibold"><%= user.email %></td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-white font-semibold"><%= user.phone %></td>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center gap-4">
                <span class="text-sm font-semibold <%= user.isVerified ? 'text-green-400' : 'text-red-400' %>">
                  <%= user.isVerified ? 'Active' : 'Blocked' %>
                </span>
                <button
                  type="button"
                  class="flex items-center gap-2 px-4 py-1.5 rounded-md text-sm font-bold transition
                    <%= user.isVerified
                      ? 'bg-green-600 hover:bg-green-700 text-white'
                      : 'bg-red-600 hover:bg-red-700 text-white' %>"
                  onclick="toggleVerification('<%= user._id %>', <%= !user.isVerified %>)"
                  aria-label="<%= user.isVerified ? 'Block user' : 'Activate user' %>"
                  title="<%= user.isVerified ? 'Block user' : 'Activate user' %>"
                >
                  <% if (user.isVerified) { %>
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-white" viewBox="0 0 20 20"><path d="M10 2a6 6 0 0 0-6 6v2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2V8a6 6 0 0 0-6-6zm0 2a4 4 0 0 1 4 4v2H6V8a4 4 0 0 1 4-4zm-6 8h12v4H4v-4z"/></svg>
                    Block
                  <% } else { %>
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-white" viewBox="0 0 20 20"><path d="M16.707 5.293a1 1 0 0 0-1.414 0L9 11.586 6.707 9.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l7-7a1 1 0 0 0-1.414-1.414z"/></svg>
                    Activate
                  <% } %>
                </button>
              </div>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </section>
    <!-- Pagination Controls -->
    <div class="flex justify-between items-center mt-6">
      <div class="text-sm text-gray-400">
        Showing <span class="font-medium" id="currentPage"><%= currentPage %></span> to <span class="font-medium" id="totalPages"><%= totalPages %></span> of <span class="font-medium" id="totalRecords"><%= totalRecordsCount %></span> results
      </div>
      <div class="inline-flex">
        <button id="prevPage" class="px-3 py-1 rounded-l-md bg-gray-700 text-gray-400 hover:bg-gray-600">Previous</button>
        <button id="nextPage" class="px-3 py-1 rounded-r-md bg-gray-700 text-gray-400 hover:bg-gray-600">Next</button>
      </div>
    </div>
    <!-- Toast Notification -->
    <div id="toast" class="fixed bottom-6 right-6 z-50 hidden px-6 py-4 rounded-lg font-bold text-white shadow-lg"></div>
  </main>
</div>
<script>
  // Make limit available as a global JS variable
  window.CUSTOMER_LIMIT = <%- limit %>;
</script>
<script>
  function showToast(message, type = 'success') {
    const toast = document.getElementById('toast');
    toast.textContent = message;
    toast.className = `fixed bottom-6 right-6 z-50 px-6 py-4 rounded-lg font-bold text-white shadow-lg ${type === 'success' ? 'bg-green-700' : 'bg-red-700'}`;
    toast.style.display = 'block';
    setTimeout(() => {
      toast.style.display = 'none';
    }, 2000);
  }
  async function toggleVerification(userId,isChecked){
    try {
      const response = await fetch('/admin/toggleVerification',{
        method:'POST',
        headers:{
          'Content-Type':'application/json',
        },
        body:JSON.stringify({userId,isVerified:isChecked})
      });
      if(response.ok){
        showToast('User status updated successfully', 'success');
        setTimeout(()=>{ window.location.reload(); }, 1200);
      }else{
        showToast('Failed to update user status', 'error');
      }
    } catch (error) {
      showToast('Error updating user status', 'error');
    }
  }
  document.getElementById('clearSearchBtn').addEventListener('click',function(){
    document.getElementById('searchInput').value = '';
    window.location.href = '/admin/customers';
  })

  // --- Pagination logic like salesReport ---
  let currentPage = parseInt(document.getElementById('currentPage').innerText);
  let totalPages = parseInt(document.getElementById('totalPages').innerText);
  let totalRecords = parseInt(document.getElementById('totalRecords').innerText);
  let searchQuery = document.getElementById('searchInput').value;
  const limit = window.CUSTOMER_LIMIT;

  function fetchCustomers(page, search = '') {
    const url = `/admin/customers?page=${page}&limit=${limit}&search=${encodeURIComponent(search)}`;
    fetch(url, { headers: { 'Accept': 'application/json' } })
      .then(response => {
        if (!response.ok) throw new Error(`Server error: ${response.status}`);
        return response.json();
      })
      .then(data => {
        updateCustomerTable(data.users);
        updatePagination(data.currentPage, data.totalPages, data.totalRecordsCount);
      })
      .catch(error => console.error('Error fetching customers:', error));
  }

  function updateCustomerTable(users) {
    const tBody = document.querySelector('tbody');
    tBody.innerHTML = '';
    users.forEach(user => {
      const row = document.createElement('tr');
      row.className = 'hover:bg-gray-700 transition';
      row.innerHTML =
        '<td class="px-6 py-4 whitespace-nowrap text-sm text-white font-semibold">' + user.username + '</td>' +
        '<td class="px-6 py-4 whitespace-nowrap text-sm text-white font-semibold">' + user.email + '</td>' +
        '<td class="px-6 py-4 whitespace-nowrap text-sm text-white font-semibold">' + user.phone + '</td>' +
        '<td class="px-6 py-4 whitespace-nowrap">' +
          '<div class="flex items-center gap-4">' +
            '<span class="text-sm font-semibold ' + (user.isVerified ? 'text-green-400' : 'text-red-400') + '">' +
              (user.isVerified ? 'Active' : 'Blocked') +
            '</span>' +
            '<button type="button" class="flex items-center gap-2 px-4 py-1.5 rounded-md text-sm font-bold transition ' + (user.isVerified ? 'bg-green-600 hover:bg-green-700 text-white' : 'bg-red-600 hover:bg-red-700 text-white') + '" ' +
              'onclick="toggleVerification(\'' + user._id + '\', ' + (!user.isVerified) + ')" ' +
              'aria-label="' + (user.isVerified ? 'Block user' : 'Activate user') + '" ' +
              'title="' + (user.isVerified ? 'Block user' : 'Activate user') + '">' +
              (user.isVerified
                ? '<svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-white" viewBox="0 0 20 20"><path d="M10 2a6 6 0 0 0-6 6v2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2V8a6 6 0 0 0-6-6zm0 2a4 4 0 0 1 4 4v2H6V8a4 4 0 0 1 4-4zm-6 8h12v4H4v-4z"/></svg> Block'
                : '<svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-white" viewBox="0 0 20 20"><path d="M16.707 5.293a1 1 0 0 0-1.414 0L9 11.586 6.707 9.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l7-7a1 1 0 0 0-1.414-1.414z"/></svg> Activate') +
            '</button>' +
          '</div>' +
        '</td>';
      tBody.appendChild(row);
    });
  }

  function updatePagination(current, total, totalRecordsCount) {
    currentPage = current;
    totalPages = total;
    document.getElementById('currentPage').innerText = current;
    document.getElementById('totalPages').innerText = total;
    document.getElementById('totalRecords').innerText = totalRecordsCount;
    document.getElementById('prevPage').disabled = currentPage === 1;
    document.getElementById('nextPage').disabled = currentPage === totalPages;
  }

  document.getElementById('prevPage').addEventListener('click', function () {
    if (currentPage > 1) {
      fetchCustomers(currentPage - 1, searchQuery);
    }
  });
  document.getElementById('nextPage').addEventListener('click', function () {
    if (currentPage < totalPages) {
      fetchCustomers(currentPage + 1, searchQuery);
    }
  });
  // Optionally, update searchQuery on input change
  document.getElementById('searchInput').addEventListener('input', function(e) {
    searchQuery = e.target.value;
  });
</script>

