<%- include('header') %>
<div class="bg-[#121212] p-2">
    <ul class="flex items-center ml-6   bg-[#121212] font-[sans-serif]  ">
      <a class="text-white  text-base cursor-pointer" href="/"><li ></li>
        Home
      </li></a>
      <li>
        <svg xmlns="http://www.w3.org/2000/svg" class="fill-gray-400 w-3.5 -rotate-90" viewBox="0 0 24 24">
          <path fill-rule="evenodd"
            d="M11.99997 18.1669a2.38 2.38 0 0 1-1.68266-.69733l-9.52-9.52a2.38 2.38 0 1 1 3.36532-3.36532l7.83734 7.83734 7.83734-7.83734a2.38 2.38 0 1 1 3.36532 3.36532l-9.52 9.52a2.38 2.38 0 0 1-1.68266.69734z"
            clip-rule="evenodd" data-original="#000000"></path>
        </svg>
      </li>
      <li class="text-gray-500 text-base cursor-pointer">
        Product
      </li>
      <li>
        <svg xmlns="http://www.w3.org/2000/svg" class="fill-gray-400 w-3.5 -rotate-90" viewBox="0 0 24 24">
          <path fill-rule="evenodd"
            d="M11.99997 18.1669a2.38 2.38 0 0 1-1.68266-.69733l-9.52-9.52a2.38 2.38 0 1 1 3.36532-3.36532l7.83734 7.83734 7.83734-7.83734a2.38 2.38 0 1 1 3.36532 3.36532l-9.52 9.52a2.38 2.38 0 0 1-1.68266.69734z"
            clip-rule="evenodd" data-original="#000000"></path>
        </svg>
      </li>
      <li class="text-gray-800 text-base font-bold cursor-pointer">
        Edit
      </li>
    </ul>
  </div>
  
  
  <div class="bg-[#121212] min-h-screen p-5">
    <!-- Search and Filter Section -->
    <div class="flex justify-between items-center mb-6">
        <div class="flex space-x-2">
            <input type="text" id="search" placeholder="Search products..." class="p-2 rounded-lg w-80 focus:outline-none focus:ring-2 focus:ring-green-500" >
            <button id="searchBtn" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">Search</button>
            <button id="clearSearchBtn" class="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600">Clear</button>
        </div>
        <div>
        <select class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700" name="" id="sortDropdown" onchange="sort(this.value)">
          <option value="">Sort</option>
          <option value="lowToHigh">Price: Low to High</option>
          <option value="highToLow">Price: High to Low</option>
          <option value="aToZ">Name: A - Z</option>   <!-- A to Z sorting -->
          <option value="zToA">Name: Z - A</option> 
        </select>
        <button id="filterBtn" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">Filter</button>
        <button id="clearBtn" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600">Clear Filter</button>
      </div>
    </div>




    <!-------------------------- Filter Modal --------------------------------->
    
    
    <div id="filterModal" class="fixed inset-1 bg-gray-900  bg-opacity-75 flex justify-center items-center hidden z-50">
  <div class="bg-gray-800 p-8 rounded-lg shadow-lg w-full max-w-xl relative">
    <button id="closeFilterModal" class="absolute top-4 right-4 text-white bg-red-500 hover:bg-red-600 p-2 rounded-full">&times;</button>
    
    <h2 class="text-2xl font-semibold mb-4 text-white text-center">Apply Filters</h2>
    
    <form id="filterForm" class="space-y-4">
      <!-- Category -->
      <div>
        <label for="category" class="text-white">Category:</label>
        <select id="category" name="category" class="w-full bg-gray-700 text-white p-2 rounded-lg">
          <option value="">Select Category</option>
          
          <!-- Dynamically populated with categories from DB -->
        </select>
      </div>

      <div>
        <label for="minPrice" class="text-white">Min Price:</label>
        <input type="number" id="minPrice" name="minPrice" class="w-full bg-gray-700 text-white p-2 rounded-lg">
        <label for="maxPrice" class="text-white">Max Price:</label>
        <input type="number" id="maxPrice" name="maxPrice" class="w-full bg-gray-700 text-white p-2 rounded-lg">
      </div>

      <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg w-full">Apply Filters</button>
    </form>
  </div>
</div>

<!-------------------------- Filter Modal --------------------------------->

    <!-- Product List -->
    <div class="product-list scrollbar-hide flex flex-wrap  gap-x-4 justify-center">
      <!-- <div class="flex flex-wrap  gap-x-4 justify-center"> -->
        <% products.forEach(product => { %>

          <div class="mb-3 w-72 rounded-lg">
             <a href="/productView/<%= product._id %>">
              <div class="  rounded-lg bg-white shadow-md">
                <a href="/productView/<%= product._id %>">
                  <!-- Product Image -->
                  <img class="h-60 w-full object-cover object-center rounded-t-lg" src="<%= product.image[0] %>" alt="product image"/>
                </a>
                <div class="p-5">
                  <!-- Product Title -->
                  <a href="/productView/<%= product._id %>">
                    <h5 class="text-xl font-semibold tracking-tight text-slate-900">
                      <%= product.product_name %>
                    </h5>
                  </a>
                  <!-- Discount Price -->
                  <div id="rating" class="mt-2.5 mb-5 flex items-center">
                    <% const totalStars = 5; %>
                    <% const filledStars = Math.round(3 || 0); %> <!-- Round rating to nearest integer -->
                    <% const emptyStars = totalStars - filledStars; %>
          
                    <% for (let i = 0; i < filledStars; i++) { %>
                      <span class="text-yellow-500 text-xl">★</span>
                    <% } %>
                    <% for (let i = 0; i < emptyStars; i++) { %>
                      <span class="text-gray-400 text-xl">☆</span>
                    <% } %>
          
                    <!-- Optional: Display numeric rating beside the stars -->
                    <span class="ml-2 text-sm text-gray-600">( <%= filledStars.toFixed(1) %> )</span>
                  </div>
                  <!-- Price and Add to Cart -->
                  <a href="/productView/<%= product._id %>">
                    <div class="flex items-center justify-between">
                      <p>
                        <span class="text-3xl font-bold text-slate-900">
                          ₹<%= product.discountPrice %>
                        </span>
                        <span class="text-sm text-slate-900 line-through">
                          ₹<%= product.price %>
                        </span>
                      </p>
                      <button class="add-to-cart-btn flex items-center rounded-md bg-slate-900 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gray-700" data-product-id="<%= product._id %>">
                        Add to cart
                    </button>
                      
                    </div>
                  </a>
                </div>
              </div>
            </a>
          </div>

          
<!-- search product display -->
<!-- Hidden product card template -->
<div id="product-template" class="hidden">
  <div class="mb-3 w-72 rounded-lg product-card">
    <a href="#" class="product-link">
      <div class="rounded-lg bg-white shadow-md">
        <img class="h-60 w-full object-cover object-center rounded-t-lg product-image" src="#" alt="product image" />
        <div class="p-5">
          <h5 class="text-xl font-semibold tracking-tight text-slate-900 product-name"></h5>
          <div id="rating" class="mt-2.5 mb-5 flex items-center product-rating">
            <!-- Stars go here -->
          </div>
          <div class="flex items-center justify-between">
            <p>
              <span class="text-3xl font-bold text-slate-900 product-discountPrice"></span>
              <span class="text-sm text-slate-900 line-through product-price"></span>
            </p>
            <button class="add-to-cart-btn flex items-center rounded-md bg-slate-900 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-gray-700" data-product-id="">
              Add to cart
            </button>
          </div>
        </div>
      </div>
    </a>
  </div>
</div>


        <% }) %>
      <!-- </div> -->
    </div>







    <div class="flex justify-center mt-8">
      <nav class="inline-flex space-x-2">
        <% if (currentPage > 1) { %>
          <!-- Previous Button -->
          <a href="/allProducts?page=<%= currentPage - 1 %>&limit=10&category=<%= category %>&minPrice=<%= minPrice %>&maxPrice=<%= maxPrice %>"
             class="px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700">
            Previous
          </a>
        <% } %>
    
        <!-- Page Numbers -->
        <% for (let i = 1; i <= totalPages; i++) { %>
          <a href="/allProducts?page=<%= i %>&limit=10&category=<%= category %>&minPrice=<%= minPrice %>&maxPrice=<%= maxPrice %>"
             class="px-4 py-2 rounded <% if (i === currentPage) { %> bg-green-600 text-white <% } else { %> bg-gray-800 text-white hover:bg-gray-700 <% } %>">
            <%= i %>
          </a>
        <% } %>
    
        <% if (currentPage < totalPages) { %>
          <!-- Next Button -->
          <a href="/allProducts?page=<%= currentPage + 1 %>&limit=10&category=<%= category %>&minPrice=<%= minPrice %>&maxPrice=<%= maxPrice %>"
             class="px-4 py-2 bg-gray-800 text-white rounded hover:bg-gray-700">
            Next
          </a>
        <% } %>
      </nav>
    </div>
    




</div>


<script>


function sort(sortValue){
  const query = document.querySelector('#search').value;
  const category = document.getElementById('category').value || '';
  const minPrice = document.getElementById('minPrice').value || '';
  const maxPrice = document.getElementById('maxPrice').value || '';

  let queryParams = new URLSearchParams({
    sort: sortValue,
    query: query,
    category: category,
    minPrice: minPrice,
    maxPrice: maxPrice,
    page: 1 // Reset to page 1 when sorting
  });

  window.location.href = `/allProducts?${queryParams.toString()}`;
}

document.querySelector('#searchBtn').addEventListener('click', function (event) {
  event.preventDefault();
  
  const query = document.querySelector('#search').value;

  fetch(`/search?query=${encodeURIComponent(query)}`)
    .then(response => response.json())
    .then(data => {
      console.log(data);
      
      const productList = document.querySelector('.product-list');
      productList.innerHTML = ''; // Clear current list

      if (data.products.length > 0) {
        data.products.forEach(product => {
          // Create the product card elements manually
          const productCard = document.createElement('div');
          productCard.classList.add('mb-3', 'w-72', 'rounded-lg');

          const productLink = document.createElement('a');
          productLink.href = `/productView/${product._id}`;

          const productWrapper = document.createElement('div');
          productWrapper.classList.add('rounded-lg', 'bg-white', 'shadow-md');

          const productImage = document.createElement('img');
          productImage.classList.add('h-60', 'w-full', 'object-cover', 'object-center', 'rounded-t-lg');
          productImage.src = product.image[0];
          productImage.alt = 'Product Image';

          const productInfo = document.createElement('div');
          productInfo.classList.add('p-5');

          const productName = document.createElement('h5');
          productName.classList.add('text-xl', 'font-semibold', 'tracking-tight', 'text-slate-900');
          productName.textContent = product.product_name;

          const ratingContainer = document.createElement('div');
          ratingContainer.classList.add('mt-2.5', 'mb-5', 'flex', 'items-center');
          const totalStars = 5;
          const filledStars = Math.round(product.rating || 0); // Use product rating
          const emptyStars = totalStars - filledStars;

          // Add filled stars
          for (let i = 0; i < filledStars; i++) {
            const star = document.createElement('span');
            star.classList.add('text-yellow-500', 'text-xl');
            star.textContent = '★';
            ratingContainer.appendChild(star);
          }

          // Add empty stars
          for (let i = 0; i < emptyStars; i++) {
            const star = document.createElement('span');
            star.classList.add('text-gray-400', 'text-xl');
            star.textContent = '☆';
            ratingContainer.appendChild(star);
          }

          const productPriceContainer = document.createElement('div');
          productPriceContainer.classList.add('flex', 'items-center', 'justify-between');

          const priceInfo = document.createElement('p');
          const discountPrice = document.createElement('span');
          discountPrice.classList.add('text-3xl', 'font-bold', 'text-slate-900');
          discountPrice.textContent = `₹${product.discountPrice}`;
          const originalPrice = document.createElement('span');
          originalPrice.classList.add('text-sm', 'text-slate-900', 'line-through');
          originalPrice.textContent = `₹${product.price}`;

          priceInfo.appendChild(discountPrice);
          priceInfo.appendChild(originalPrice);

          const addToCartBtn = document.createElement('button');
          addToCartBtn.classList.add('add-to-cart-btn', 'flex', 'items-center', 'rounded-md', 'bg-slate-900', 'px-5', 'py-2.5', 'text-center', 'text-sm', 'font-medium', 'text-white', 'hover:bg-gray-700');
          addToCartBtn.textContent = 'Add to cart';
          addToCartBtn.setAttribute('data-product-id', product._id);

          // Event listener for add to cart
          addToCartBtn.addEventListener('click', function () {
            const productId = this.getAttribute('data-product-id');
            addToCart(productId);
          });

          // Assemble the product card
          productPriceContainer.appendChild(priceInfo);
          productPriceContainer.appendChild(addToCartBtn);

          productInfo.appendChild(productName);
          productInfo.appendChild(ratingContainer);
          productInfo.appendChild(productPriceContainer);

          productWrapper.appendChild(productImage);
          productWrapper.appendChild(productInfo);
          productLink.appendChild(productWrapper);
          productCard.appendChild(productLink);

          // Append the product card to the product list
          productList.appendChild(productCard);
        });
      } else {
        productList.innerHTML = `<p class="text-white">No products found for "${query}".</p>`;
      }
    })
    .catch(error => {
      console.error('Error fetching the products:', error);
    });
});


document.querySelector("#clearSearchBtn").addEventListener('click',function(event){

  event.preventDefault();

  window.location.href = '/allProducts'

})


//--------------------- filter ---------------------------------------
document.getElementById('filterBtn').addEventListener('click', () => {

  
productDataFetch()

  document.getElementById('filterModal').classList.remove('hidden');
});


function productDataFetch(){

  fetch(`/allproducts/filter-modal`,{
    method:'GET',
    headers:{
      'Content-Type': 'application/json'
    }

  })
  .then(response=>response.json())
  .then((data)=>{
    const categoryDropdown = document.getElementById('category');
    categoryDropdown.innerHTML = '<option value="">Select Category</option>';

    data.categories.forEach((cat)=>{
      console.log("----",cat.collectionName);
      
      const option = document.createElement('option');
      option.value = cat._id;
      option.textContent = cat.collectionName;
      categoryDropdown.appendChild(option)
    })

  })
  .catch((error)=>{
    
  })


}



document.getElementById('filterForm').addEventListener('submit',function(event){
  event.preventDefault()

  const category = document.getElementById('category').value;
  const minPrice = document.getElementById('minPrice').value;
  const maxPrice = document.getElementById('maxPrice').value;

  console.log(minPrice,"--------",maxPrice,"-------",category);
  

  let quertParams = new URLSearchParams({
    category,
    minPrice,
    maxPrice,
    page:1
  
  })

  
  window.location.href = `/allProducts?category=${category}&minPrice=${minPrice}&maxPrice=${maxPrice}`
})


document.getElementById('clearBtn').addEventListener('click',()=>{
  window.location.href = '/allProducts';
})

document.getElementById('closeFilterModal').addEventListener('click', () => {
  document.getElementById('filterModal').classList.add('hidden');
});

















const addToCart = async (productId)=>{
    try {
      const response = await fetch('/cart/add',{
        method:'POST',
        headers:{
          'content-Type' : 'application/json'
        },
        body:JSON.stringify({
          productId : productId,
          productCount:1
        })
      })

      const data = await response.json();

      if(response.ok){
        Swal.fire({
          postion:"top-center",
          icon:"success",
          title:"Item added to cart",
          showConfirmButton: false,
          time:500

        })
        
        
      }else{
        alert(data.message)
      }
    } catch (error) {
      console.error('Error adding to cart:', error);
      
    }
  }


  document.querySelectorAll('.add-to-cart-btn').forEach(button=>{
    button.addEventListener('click',function(){
      const productId = this.getAttribute('data-product-id');
      addToCart(productId)
    })
  })


//---------------------filter ---------------------------------------


</script>
